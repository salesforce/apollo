syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.salesfoce.apollo.choam.proto";
option java_outer_classname = "ChoamProto";
option objc_class_prefix = "Chp";
import "util.proto";
import "stereotomy.proto";

package apollo.choam;

service TransactionSubmission {
    rpc submit (Transaction) returns (SubmitResult) {}
}

service Terminal {
    /* reconfiguration */
    rpc join (utils.Digeste) returns (ViewMember) {}

    /* bootstrapping */
    rpc sync(Synchronize) returns (Initial) {}
    rpc fetchBlocks(BlockReplication) returns (Blocks) {}
    rpc fetchViewChain(BlockReplication) returns (Blocks) {}
    rpc fetch(CheckpointReplication) returns (CheckpointSegments) {}
}

message SubmitResult {
    enum Result {
        INVALID_RESULT = 0;
        PUBLISHED = 1;
        BUFFER_FULL = 2;
        INACTIVE = 3;
        NO_COMMITTEE = 4;
        UNAVAILABLE = 6;
        INVALID_SUBMIT = 7;
        ERROR_SUBMITTING = 8;
    }
    Result result = 1;
    string errorMsg = 2;
}

message Block {
    Header header = 1;
    oneof body {
        Genesis genesis = 2;
        Reconfigure reconfigure = 3;
        Checkpoint checkpoint = 4;
        Executions executions = 5;
        Assemble assemble = 6;
    }
}

message Header {
    uint64 height = 1; 
    uint64 lastCheckpoint = 2;
    uint64 lastReconfig = 3;
    utils.Digeste lastCheckpointHash = 4;
    utils.Digeste lastReconfigHash = 5;
    utils.Digeste previous = 6;
    utils.Digeste bodyHash = 7;
}

message Genesis {
    FoundationSeal foundation = 1;
    Reconfigure initialView = 2;
    repeated Transaction initialize = 3;
}

message Reconfigure {
    utils.Digeste id = 1;
    int32 checkpointTarget = 2; 
    repeated Join joins = 3;
}

message Checkpoint { 
    int64 byteSize = 1;
    int32 segmentSize = 2;
    utils.Digeste stateHash = 3;
    repeated utils.Digeste segments = 4;
}

message Executions {
    repeated Transaction executions = 1;
}

message Assemble {
    utils.Digeste nextView = 1;
}

message Foundation {
    repeated utils.Digeste membership = 1;
    stereotomy.KeyEvent_ authority = 2;
}

message FoundationSeal {
    Foundation foundation = 1;
    utils.Sig signature = 2;
}

message Transaction { 
    utils.Digeste source = 1;
    int32 nonce = 2;
    bytes content = 3;
    utils.Sig signature = 4; 
}

message UnitData {
    repeated Validate validations = 1;
    repeated Transaction transactions = 2;
    repeated Reassemble reassemblies = 3;
}

message Join {
    utils.Digeste view = 1;
    ViewMember member = 2;
    repeated Certification endorsements = 3;
    stereotomy.KERL_ kerl = 4;
}

message ViewMember {
    utils.Digeste id = 1;
    utils.PubKey consensusKey = 2;
    utils.Sig signature = 3;
}

message Certification {
    utils.Digeste id = 1;
    utils.Sig signature = 2;
}

message Certifications {
    repeated Certification certs = 1;
}

message CertifiedBlock {
    Block block = 1;
    repeated Certification certifications = 2;
}

message ByteTransaction {
    bytes content = 1;
}

message CheckpointProcessing {
    uint64 checkpoint = 1;
}

message Validate {  
    utils.Digeste hash = 1;
    Certification witness = 2;
}

message Reassemble { 
    repeated ViewMember members = 1;
    repeated Validate validations = 2;
}

message ViewMembers {
    repeated ViewMember members = 1;
}

message Validations {
    repeated Validate validations = 1;
}

message Synchronize {
    utils.Digeste from = 1;
    uint64 height = 2;
}

message Initial {
    CertifiedBlock genesis = 1;
    CertifiedBlock checkpoint = 2;
    CertifiedBlock checkpointView = 3;
    repeated CertifiedBlock viewChain = 4;
}

message BlockReplication {
    uint64 from = 1;
    uint64 to = 2;
    utils.Biff blocksBff = 3;
}

message Blocks {
    repeated CertifiedBlock blocks = 1;
}

message CheckpointReplication {
    uint64 checkpoint = 1;
    utils.Biff checkpointSegments = 2;
}

message CheckpointSegments {
    repeated Slice segments = 1;
    repeated utils.Digeste blocks = 2;
}

message Slice {
    int32 index = 1;
    bytes block = 2;
}
