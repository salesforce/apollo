@namespace ( "com.salesforce.apollo.avro" )
protocol Apollo {
    fixed ADDRESS ( 70 );
    fixed HASH ( 32 );
    fixed Uuid ( 16 );
    record MessageDigest {
        Uuid source;
        Uuid id;
        int age;
        long time;
    }

    record Message {
        MessageDigest digest;
        int channel;
        bytes content;
        bytes signature;
    }

    record MessageGossip {
        array<MessageDigest> digests;
        array<Message> updates;
    }

    record Signed {
        bytes content;
        bytes signature;
    }

    record AccusationDigest {
        Uuid id;
        long epoch;
        int ring;
    }

    record AccusationGossip {
        array<AccusationDigest> digests;
        array<Signed> updates;
    }

    record CertificateDigest {
        Uuid id;
        long epoch;
        bytes hash;
    }

    record EncodedCertificate {
        CertificateDigest digest;
        bytes content;
    }

    record CertificateGossip {
        array<CertificateDigest> digests;
        array<EncodedCertificate> updates;
    }

    record NoteDigest {
        Uuid id;
        long epoch;
    }

    record NoteGossip {
        array<NoteDigest> digests;
        array<Signed> updates;
    }

    record Digests {
        array<MessageDigest> messages;
        array<CertificateDigest> certificates;
        array<NoteDigest> notes;
        array<AccusationDigest> accusations;
    }

    record Gossip {
        boolean redirect;
        MessageGossip messages;
        CertificateGossip certificates;
        NoteGossip notes;
        AccusationGossip accusations;
    }

    record Update {
        array<Message> messages;
        array<EncodedCertificate> certificates;
        array<Signed> notes;
        array<Signed> accusations;
    }

    record DagEntry {
        union { null, HASH } description;
        union { null, array<HASH> } links;
        union { null, bytes } data;
    }

    record Interval {
        HASH start;
        HASH end;
    }

    record JoinResponse {
        Signed forward;
        array<HASH> interval;
    }

    record QueryResult {
        array<boolean> result;
        array<DagEntry> entries;
    }

    /*
     * Fireflies 3 phase gossip
     */
    Gossip gossip ( Signed note, int ring, Digests gossip );
    void update ( int ring, Update update ) oneway;

    /**
     * Fireflies liveness ping
     */
    int ping ( int ping );

    /*
     * Ghost API
     */
    union { null, DagEntry } get ( HASH key );
    void put ( DagEntry entry ) oneway;

    /**
	 * Ghost interval gossip
	 */
    array<DagEntry> intervals ( array<Interval> intervals, array<HASH> have );

    /**
     * Avalanche query
     */
    QueryResult query ( array<HASH> transactions, array<HASH> want );

    /**
     * Avalanche lazy DAG update gossip
     */
    array<DagEntry> requestDAG ( array<HASH> want );
}