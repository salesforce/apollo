// Generated by delombok at Thu Mar 11 18:53:10 PST 2021
package io.quantumdb.cli.xml;

import static com.google.common.base.Preconditions.checkArgument;

import java.util.List;

import com.google.common.collect.Lists;

import io.quantumdb.core.schema.definitions.Column.Hint;
import io.quantumdb.core.schema.definitions.ColumnType;
import io.quantumdb.core.schema.definitions.PostgresTypes;
import io.quantumdb.core.schema.operations.AddColumn;
import io.quantumdb.core.schema.operations.SchemaOperations;

public class XmlAddColumn implements XmlOperation<AddColumn> {
    static final String TAG = "addColumn";

    static XmlOperation<?> convert(XmlElement element) {
        checkArgument(element.getTag().equals(TAG));
        XmlAddColumn operation = new XmlAddColumn();
        operation.setTableName(element.getAttributes().get("tableName"));
        for (XmlElement child : element.getChildren()) {
            if (child.getTag().equals("column")) {
                operation.setColumn(XmlColumn.convert(child));
            }
        }
        return operation;
    }

    private XmlColumn column;
    private String    tableName;

    @java.lang.SuppressWarnings("all")
    public XmlAddColumn() {
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
        if (o == this)
            return true;
        if (!(o instanceof XmlAddColumn))
            return false;
        final XmlAddColumn other = (XmlAddColumn) o;
        if (!other.canEqual(this))
            return false;
        final java.lang.Object this$tableName = this.getTableName();
        final java.lang.Object other$tableName = other.getTableName();
        if (this$tableName == null ? other$tableName != null : !this$tableName.equals(other$tableName))
            return false;
        final java.lang.Object this$column = this.getColumn();
        final java.lang.Object other$column = other.getColumn();
        if (this$column == null ? other$column != null : !this$column.equals(other$column))
            return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    public XmlColumn getColumn() {
        return this.column;
    }

    @java.lang.SuppressWarnings("all")
    public String getTableName() {
        return this.tableName;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $tableName = this.getTableName();
        result = result * PRIME + ($tableName == null ? 43 : $tableName.hashCode());
        final java.lang.Object $column = this.getColumn();
        result = result * PRIME + ($column == null ? 43 : $column.hashCode());
        return result;
    }

    @java.lang.SuppressWarnings("all")
    public void setColumn(final XmlColumn column) {
        this.column = column;
    }

    @java.lang.SuppressWarnings("all")
    public void setTableName(final String tableName) {
        this.tableName = tableName;
    }

    @Override
    public AddColumn toOperation() {
        ColumnType dataType = PostgresTypes.from(column.getType());
        String columnName = column.getName();
        String defaultExpression = column.getDefaultExpression();
        List<Hint> hints = Lists.newArrayList();
        if (column.isNullable()) {
            hints.add(Hint.NOT_NULL);
        }
        if (column.isAutoIncrement()) {
            hints.add(Hint.AUTO_INCREMENT);
        }
        if (column.isPrimaryKey()) {
            hints.add(Hint.IDENTITY);
        }
        Hint[] hintArray = hints.toArray(new Hint[hints.size()]);
        return SchemaOperations.addColumn(tableName, columnName, dataType, defaultExpression, hintArray);
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public java.lang.String toString() {
        return "XmlAddColumn(tableName=" + this.getTableName() + ", column=" + this.getColumn() + ")";
    }

    @java.lang.SuppressWarnings("all")
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof XmlAddColumn;
    }
}
