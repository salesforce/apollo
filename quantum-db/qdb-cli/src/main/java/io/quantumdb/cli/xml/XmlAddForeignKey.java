// Generated by delombok at Thu Mar 11 18:53:10 PST 2021
package io.quantumdb.cli.xml;

import static com.google.common.base.Preconditions.checkArgument;
import java.util.Optional;
import io.quantumdb.core.schema.definitions.ForeignKey.Action;
import io.quantumdb.core.schema.operations.AddForeignKey;
import io.quantumdb.core.schema.operations.SchemaOperations;

public class XmlAddForeignKey implements XmlOperation<AddForeignKey> {
    static final String TAG = "addForeignKey";

    static XmlOperation<?> convert(XmlElement element) {
        checkArgument(element.getTag().equals(TAG));
        XmlAddForeignKey operation = new XmlAddForeignKey();
        operation.setTableName(element.getAttributes().get("tableName"));
        operation.setColumnNames(element.getAttributes().get("columnNames").split(","));
        operation.setReferencedTableName(element.getAttributes().get("referencesTableName"));
        operation.setReferencedColumnNames(element.getAttributes().get("referencesColumnNames").split(","));
        Optional.ofNullable(element.getAttributes().get("name")).ifPresent(operation::setName);
        Optional.ofNullable(element.getAttributes().get("onDelete"))
                .map(Action::valueOf)
                .ifPresent(operation::setOnDelete);
        Optional.ofNullable(element.getAttributes().get("onUpdate"))
                .map(Action::valueOf)
                .ifPresent(operation::setOnUpdate);
        return operation;
    }

    private String[] columnNames;
    private String   name;
    private Action   onDelete;
    private Action   onUpdate;
    private String[] referencedColumnNames;
    private String   referencedTableName;
    private String   tableName;

    
    public XmlAddForeignKey() {
    }

    @java.lang.Override
    
    public boolean equals(final java.lang.Object o) {
        if (o == this)
            return true;
        if (!(o instanceof XmlAddForeignKey))
            return false;
        final XmlAddForeignKey other = (XmlAddForeignKey) o;
        if (!other.canEqual(this))
            return false;
        final java.lang.Object this$tableName = this.getTableName();
        final java.lang.Object other$tableName = other.getTableName();
        if (this$tableName == null ? other$tableName != null : !this$tableName.equals(other$tableName))
            return false;
        if (!java.util.Arrays.deepEquals(this.getColumnNames(), other.getColumnNames()))
            return false;
        final java.lang.Object this$referencedTableName = this.getReferencedTableName();
        final java.lang.Object other$referencedTableName = other.getReferencedTableName();
        if (this$referencedTableName == null ? other$referencedTableName != null
                : !this$referencedTableName.equals(other$referencedTableName))
            return false;
        if (!java.util.Arrays.deepEquals(this.getReferencedColumnNames(), other.getReferencedColumnNames()))
            return false;
        final java.lang.Object this$name = this.getName();
        final java.lang.Object other$name = other.getName();
        if (this$name == null ? other$name != null : !this$name.equals(other$name))
            return false;
        final java.lang.Object this$onDelete = this.getOnDelete();
        final java.lang.Object other$onDelete = other.getOnDelete();
        if (this$onDelete == null ? other$onDelete != null : !this$onDelete.equals(other$onDelete))
            return false;
        final java.lang.Object this$onUpdate = this.getOnUpdate();
        final java.lang.Object other$onUpdate = other.getOnUpdate();
        if (this$onUpdate == null ? other$onUpdate != null : !this$onUpdate.equals(other$onUpdate))
            return false;
        return true;
    }

    
    public String[] getColumnNames() {
        return this.columnNames;
    }

    
    public String getName() {
        return this.name;
    }

    
    public Action getOnDelete() {
        return this.onDelete;
    }

    
    public Action getOnUpdate() {
        return this.onUpdate;
    }

    
    public String[] getReferencedColumnNames() {
        return this.referencedColumnNames;
    }

    
    public String getReferencedTableName() {
        return this.referencedTableName;
    }

    
    public String getTableName() {
        return this.tableName;
    }

    @java.lang.Override
    
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $tableName = this.getTableName();
        result = result * PRIME + ($tableName == null ? 43 : $tableName.hashCode());
        result = result * PRIME + java.util.Arrays.deepHashCode(this.getColumnNames());
        final java.lang.Object $referencedTableName = this.getReferencedTableName();
        result = result * PRIME + ($referencedTableName == null ? 43 : $referencedTableName.hashCode());
        result = result * PRIME + java.util.Arrays.deepHashCode(this.getReferencedColumnNames());
        final java.lang.Object $name = this.getName();
        result = result * PRIME + ($name == null ? 43 : $name.hashCode());
        final java.lang.Object $onDelete = this.getOnDelete();
        result = result * PRIME + ($onDelete == null ? 43 : $onDelete.hashCode());
        final java.lang.Object $onUpdate = this.getOnUpdate();
        result = result * PRIME + ($onUpdate == null ? 43 : $onUpdate.hashCode());
        return result;
    }

    
    public void setColumnNames(final String[] columnNames) {
        this.columnNames = columnNames;
    }

    
    public void setName(final String name) {
        this.name = name;
    }

    
    public void setOnDelete(final Action onDelete) {
        this.onDelete = onDelete;
    }

    
    public void setOnUpdate(final Action onUpdate) {
        this.onUpdate = onUpdate;
    }

    
    public void setReferencedColumnNames(final String[] referencedColumnNames) {
        this.referencedColumnNames = referencedColumnNames;
    }

    
    public void setReferencedTableName(final String referencedTableName) {
        this.referencedTableName = referencedTableName;
    }

    
    public void setTableName(final String tableName) {
        this.tableName = tableName;
    }

    @Override
    public AddForeignKey toOperation() {
        AddForeignKey operation = SchemaOperations.addForeignKey(tableName, columnNames)
                                                  .referencing(referencedTableName, referencedColumnNames);
        Optional.ofNullable(name).ifPresent(operation::named);
        Optional.ofNullable(onDelete).ifPresent(operation::onDelete);
        Optional.ofNullable(onUpdate).ifPresent(operation::onUpdate);
        return operation;
    }

    @java.lang.Override
    
    public java.lang.String toString() {
        return "XmlAddForeignKey(tableName=" + this.getTableName() + ", columnNames="
                + java.util.Arrays.deepToString(this.getColumnNames()) + ", referencedTableName="
                + this.getReferencedTableName() + ", referencedColumnNames="
                + java.util.Arrays.deepToString(this.getReferencedColumnNames()) + ", name=" + this.getName()
                + ", onDelete=" + this.getOnDelete() + ", onUpdate=" + this.getOnUpdate() + ")";
    }

    
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof XmlAddForeignKey;
    }
}
