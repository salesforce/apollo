/*
 * This file is generated by jOOQ.
 */
package com.apollo.qdb.quantumdbSchema;


import com.apollo.qdb.quantumdbSchema.tables.ActiveVersions;
import com.apollo.qdb.quantumdbSchema.tables.Changelog;
import com.apollo.qdb.quantumdbSchema.tables.Changesets;
import com.apollo.qdb.quantumdbSchema.tables.ColumnMappings;
import com.apollo.qdb.quantumdbSchema.tables.Config;
import com.apollo.qdb.quantumdbSchema.tables.RefVersions;
import com.apollo.qdb.quantumdbSchema.tables.Refs;
import com.apollo.qdb.quantumdbSchema.tables.SynchronizerColumns;
import com.apollo.qdb.quantumdbSchema.tables.Synchronizers;
import com.apollo.qdb.quantumdbSchema.tables.TableColumns;
import com.apollo.qdb.quantumdbSchema.tables.records.ActiveVersionsRecord;
import com.apollo.qdb.quantumdbSchema.tables.records.ChangelogRecord;
import com.apollo.qdb.quantumdbSchema.tables.records.ChangesetsRecord;
import com.apollo.qdb.quantumdbSchema.tables.records.ColumnMappingsRecord;
import com.apollo.qdb.quantumdbSchema.tables.records.ConfigRecord;
import com.apollo.qdb.quantumdbSchema.tables.records.RefVersionsRecord;
import com.apollo.qdb.quantumdbSchema.tables.records.RefsRecord;
import com.apollo.qdb.quantumdbSchema.tables.records.SynchronizerColumnsRecord;
import com.apollo.qdb.quantumdbSchema.tables.records.SynchronizersRecord;
import com.apollo.qdb.quantumdbSchema.tables.records.TableColumnsRecord;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>QUANTUMDB</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<ColumnMappingsRecord, Long> IDENTITY_COLUMN_MAPPINGS = Identities0.IDENTITY_COLUMN_MAPPINGS;
    public static final Identity<SynchronizerColumnsRecord, Long> IDENTITY_SYNCHRONIZER_COLUMNS = Identities0.IDENTITY_SYNCHRONIZER_COLUMNS;
    public static final Identity<SynchronizersRecord, Long> IDENTITY_SYNCHRONIZERS = Identities0.IDENTITY_SYNCHRONIZERS;
    public static final Identity<TableColumnsRecord, Long> IDENTITY_TABLE_COLUMNS = Identities0.IDENTITY_TABLE_COLUMNS;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ActiveVersionsRecord> CONSTRAINT_FC = UniqueKeys0.CONSTRAINT_FC;
    public static final UniqueKey<ChangelogRecord> CONSTRAINT_F = UniqueKeys0.CONSTRAINT_F;
    public static final UniqueKey<ChangesetsRecord> CONSTRAINT_9 = UniqueKeys0.CONSTRAINT_9;
    public static final UniqueKey<ChangesetsRecord> CHANGESETS_VERSION_ID_UNIQUE = UniqueKeys0.CHANGESETS_VERSION_ID_UNIQUE;
    public static final UniqueKey<ColumnMappingsRecord> CONSTRAINT_B = UniqueKeys0.CONSTRAINT_B;
    public static final UniqueKey<ColumnMappingsRecord> COLUMN_MAPPINGS_SOURCE_TARGET_UNIQUENESS = UniqueKeys0.COLUMN_MAPPINGS_SOURCE_TARGET_UNIQUENESS;
    public static final UniqueKey<ConfigRecord> CONSTRAINT_7 = UniqueKeys0.CONSTRAINT_7;
    public static final UniqueKey<RefVersionsRecord> CONSTRAINT_22 = UniqueKeys0.CONSTRAINT_22;
    public static final UniqueKey<RefsRecord> CONSTRAINT_2 = UniqueKeys0.CONSTRAINT_2;
    public static final UniqueKey<SynchronizerColumnsRecord> CONSTRAINT_3 = UniqueKeys0.CONSTRAINT_3;
    public static final UniqueKey<SynchronizersRecord> CONSTRAINT_23 = UniqueKeys0.CONSTRAINT_23;
    public static final UniqueKey<SynchronizersRecord> SYNCHRONIZERS_SOURCE_TARGET_UNIQUENESS = UniqueKeys0.SYNCHRONIZERS_SOURCE_TARGET_UNIQUENESS;
    public static final UniqueKey<SynchronizersRecord> SYNCHRONIZERS_UNIQUE_FUNCTION_NAME = UniqueKeys0.SYNCHRONIZERS_UNIQUE_FUNCTION_NAME;
    public static final UniqueKey<SynchronizersRecord> SYNCHRONIZERS_UNIQUE_TRIGGER_NAME = UniqueKeys0.SYNCHRONIZERS_UNIQUE_TRIGGER_NAME;
    public static final UniqueKey<TableColumnsRecord> CONSTRAINT_6 = UniqueKeys0.CONSTRAINT_6;
    public static final UniqueKey<TableColumnsRecord> TABLE_COLUMNS_REF_ID_COLUMN_NAME_UNIQUENESS = UniqueKeys0.TABLE_COLUMNS_REF_ID_COLUMN_NAME_UNIQUENESS;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ActiveVersionsRecord, ChangelogRecord> ACTIVE_VERSIONS_VERSION_ID = ForeignKeys0.ACTIVE_VERSIONS_VERSION_ID;
    public static final ForeignKey<ChangelogRecord, ChangelogRecord> CHANGELOG_PARENT_VERSION_ID = ForeignKeys0.CHANGELOG_PARENT_VERSION_ID;
    public static final ForeignKey<ChangesetsRecord, ChangelogRecord> CHANGESETS_VERSION_ID = ForeignKeys0.CHANGESETS_VERSION_ID;
    public static final ForeignKey<ColumnMappingsRecord, TableColumnsRecord> COLUMN_MAPPINGS_SOURCE_COLUMN_ID = ForeignKeys0.COLUMN_MAPPINGS_SOURCE_COLUMN_ID;
    public static final ForeignKey<ColumnMappingsRecord, TableColumnsRecord> COLUMN_MAPPINGS_TARGET_COLUMN_ID = ForeignKeys0.COLUMN_MAPPINGS_TARGET_COLUMN_ID;
    public static final ForeignKey<RefVersionsRecord, RefsRecord> REF_VERSIONS_REF_ID = ForeignKeys0.REF_VERSIONS_REF_ID;
    public static final ForeignKey<RefVersionsRecord, ChangelogRecord> REF_VERSIONS_VERSION_ID = ForeignKeys0.REF_VERSIONS_VERSION_ID;
    public static final ForeignKey<SynchronizerColumnsRecord, SynchronizersRecord> SYNCHRONIZER_COLUMNS_SYNCHRONIZER_ID = ForeignKeys0.SYNCHRONIZER_COLUMNS_SYNCHRONIZER_ID;
    public static final ForeignKey<SynchronizerColumnsRecord, ColumnMappingsRecord> SYNCHRONIZER_COLUMNS_COLUMN_MAPPING_ID = ForeignKeys0.SYNCHRONIZER_COLUMNS_COLUMN_MAPPING_ID;
    public static final ForeignKey<SynchronizersRecord, RefsRecord> SYNCHRONIZERS_SOURCE_REF_ID = ForeignKeys0.SYNCHRONIZERS_SOURCE_REF_ID;
    public static final ForeignKey<SynchronizersRecord, RefsRecord> SYNCHRONIZERS_TARGET_REF_ID = ForeignKeys0.SYNCHRONIZERS_TARGET_REF_ID;
    public static final ForeignKey<TableColumnsRecord, RefsRecord> TABLE_COLUMNS_REF_ID = ForeignKeys0.TABLE_COLUMNS_REF_ID;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<ColumnMappingsRecord, Long> IDENTITY_COLUMN_MAPPINGS = Internal.createIdentity(ColumnMappings.COLUMN_MAPPINGS, ColumnMappings.COLUMN_MAPPINGS.ID);
        public static Identity<SynchronizerColumnsRecord, Long> IDENTITY_SYNCHRONIZER_COLUMNS = Internal.createIdentity(SynchronizerColumns.SYNCHRONIZER_COLUMNS, SynchronizerColumns.SYNCHRONIZER_COLUMNS.SYNCHRONIZER_ID);
        public static Identity<SynchronizersRecord, Long> IDENTITY_SYNCHRONIZERS = Internal.createIdentity(Synchronizers.SYNCHRONIZERS, Synchronizers.SYNCHRONIZERS.ID);
        public static Identity<TableColumnsRecord, Long> IDENTITY_TABLE_COLUMNS = Internal.createIdentity(TableColumns.TABLE_COLUMNS, TableColumns.TABLE_COLUMNS.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<ActiveVersionsRecord> CONSTRAINT_FC = Internal.createUniqueKey(ActiveVersions.ACTIVE_VERSIONS, "CONSTRAINT_FC", new TableField[] { ActiveVersions.ACTIVE_VERSIONS.VERSION_ID }, true);
        public static final UniqueKey<ChangelogRecord> CONSTRAINT_F = Internal.createUniqueKey(Changelog.CHANGELOG, "CONSTRAINT_F", new TableField[] { Changelog.CHANGELOG.VERSION_ID }, true);
        public static final UniqueKey<ChangesetsRecord> CONSTRAINT_9 = Internal.createUniqueKey(Changesets.CHANGESETS, "CONSTRAINT_9", new TableField[] { Changesets.CHANGESETS.ID }, true);
        public static final UniqueKey<ChangesetsRecord> CHANGESETS_VERSION_ID_UNIQUE = Internal.createUniqueKey(Changesets.CHANGESETS, "CHANGESETS_VERSION_ID_UNIQUE", new TableField[] { Changesets.CHANGESETS.VERSION_ID }, true);
        public static final UniqueKey<ColumnMappingsRecord> CONSTRAINT_B = Internal.createUniqueKey(ColumnMappings.COLUMN_MAPPINGS, "CONSTRAINT_B", new TableField[] { ColumnMappings.COLUMN_MAPPINGS.ID }, true);
        public static final UniqueKey<ColumnMappingsRecord> COLUMN_MAPPINGS_SOURCE_TARGET_UNIQUENESS = Internal.createUniqueKey(ColumnMappings.COLUMN_MAPPINGS, "COLUMN_MAPPINGS_SOURCE_TARGET_UNIQUENESS", new TableField[] { ColumnMappings.COLUMN_MAPPINGS.SOURCE_COLUMN_ID, ColumnMappings.COLUMN_MAPPINGS.TARGET_COLUMN_ID }, true);
        public static final UniqueKey<ConfigRecord> CONSTRAINT_7 = Internal.createUniqueKey(Config.CONFIG, "CONSTRAINT_7", new TableField[] { Config.CONFIG.NAME }, true);
        public static final UniqueKey<RefVersionsRecord> CONSTRAINT_22 = Internal.createUniqueKey(RefVersions.REF_VERSIONS, "CONSTRAINT_22", new TableField[] { RefVersions.REF_VERSIONS.REF_ID, RefVersions.REF_VERSIONS.VERSION_ID }, true);
        public static final UniqueKey<RefsRecord> CONSTRAINT_2 = Internal.createUniqueKey(Refs.REFS, "CONSTRAINT_2", new TableField[] { Refs.REFS.REF_ID }, true);
        public static final UniqueKey<SynchronizerColumnsRecord> CONSTRAINT_3 = Internal.createUniqueKey(SynchronizerColumns.SYNCHRONIZER_COLUMNS, "CONSTRAINT_3", new TableField[] { SynchronizerColumns.SYNCHRONIZER_COLUMNS.SYNCHRONIZER_ID, SynchronizerColumns.SYNCHRONIZER_COLUMNS.COLUMN_MAPPING_ID }, true);
        public static final UniqueKey<SynchronizersRecord> CONSTRAINT_23 = Internal.createUniqueKey(Synchronizers.SYNCHRONIZERS, "CONSTRAINT_23", new TableField[] { Synchronizers.SYNCHRONIZERS.ID }, true);
        public static final UniqueKey<SynchronizersRecord> SYNCHRONIZERS_SOURCE_TARGET_UNIQUENESS = Internal.createUniqueKey(Synchronizers.SYNCHRONIZERS, "SYNCHRONIZERS_SOURCE_TARGET_UNIQUENESS", new TableField[] { Synchronizers.SYNCHRONIZERS.SOURCE_REF_ID, Synchronizers.SYNCHRONIZERS.TARGET_REF_ID }, true);
        public static final UniqueKey<SynchronizersRecord> SYNCHRONIZERS_UNIQUE_FUNCTION_NAME = Internal.createUniqueKey(Synchronizers.SYNCHRONIZERS, "SYNCHRONIZERS_UNIQUE_FUNCTION_NAME", new TableField[] { Synchronizers.SYNCHRONIZERS.FUNCTION_NAME }, true);
        public static final UniqueKey<SynchronizersRecord> SYNCHRONIZERS_UNIQUE_TRIGGER_NAME = Internal.createUniqueKey(Synchronizers.SYNCHRONIZERS, "SYNCHRONIZERS_UNIQUE_TRIGGER_NAME", new TableField[] { Synchronizers.SYNCHRONIZERS.TRIGGER_NAME }, true);
        public static final UniqueKey<TableColumnsRecord> CONSTRAINT_6 = Internal.createUniqueKey(TableColumns.TABLE_COLUMNS, "CONSTRAINT_6", new TableField[] { TableColumns.TABLE_COLUMNS.ID }, true);
        public static final UniqueKey<TableColumnsRecord> TABLE_COLUMNS_REF_ID_COLUMN_NAME_UNIQUENESS = Internal.createUniqueKey(TableColumns.TABLE_COLUMNS, "TABLE_COLUMNS_REF_ID_COLUMN_NAME_UNIQUENESS", new TableField[] { TableColumns.TABLE_COLUMNS.REF_ID, TableColumns.TABLE_COLUMNS.COLUMN_NAME }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<ActiveVersionsRecord, ChangelogRecord> ACTIVE_VERSIONS_VERSION_ID = Internal.createForeignKey(Keys.CONSTRAINT_F, ActiveVersions.ACTIVE_VERSIONS, "ACTIVE_VERSIONS_VERSION_ID", new TableField[] { ActiveVersions.ACTIVE_VERSIONS.VERSION_ID }, true);
        public static final ForeignKey<ChangelogRecord, ChangelogRecord> CHANGELOG_PARENT_VERSION_ID = Internal.createForeignKey(Keys.CONSTRAINT_F, Changelog.CHANGELOG, "CHANGELOG_PARENT_VERSION_ID", new TableField[] { Changelog.CHANGELOG.PARENT_VERSION_ID }, true);
        public static final ForeignKey<ChangesetsRecord, ChangelogRecord> CHANGESETS_VERSION_ID = Internal.createForeignKey(Keys.CONSTRAINT_F, Changesets.CHANGESETS, "CHANGESETS_VERSION_ID", new TableField[] { Changesets.CHANGESETS.VERSION_ID }, true);
        public static final ForeignKey<ColumnMappingsRecord, TableColumnsRecord> COLUMN_MAPPINGS_SOURCE_COLUMN_ID = Internal.createForeignKey(Keys.CONSTRAINT_6, ColumnMappings.COLUMN_MAPPINGS, "COLUMN_MAPPINGS_SOURCE_COLUMN_ID", new TableField[] { ColumnMappings.COLUMN_MAPPINGS.SOURCE_COLUMN_ID }, true);
        public static final ForeignKey<ColumnMappingsRecord, TableColumnsRecord> COLUMN_MAPPINGS_TARGET_COLUMN_ID = Internal.createForeignKey(Keys.CONSTRAINT_6, ColumnMappings.COLUMN_MAPPINGS, "COLUMN_MAPPINGS_TARGET_COLUMN_ID", new TableField[] { ColumnMappings.COLUMN_MAPPINGS.TARGET_COLUMN_ID }, true);
        public static final ForeignKey<RefVersionsRecord, RefsRecord> REF_VERSIONS_REF_ID = Internal.createForeignKey(Keys.CONSTRAINT_2, RefVersions.REF_VERSIONS, "REF_VERSIONS_REF_ID", new TableField[] { RefVersions.REF_VERSIONS.REF_ID }, true);
        public static final ForeignKey<RefVersionsRecord, ChangelogRecord> REF_VERSIONS_VERSION_ID = Internal.createForeignKey(Keys.CONSTRAINT_F, RefVersions.REF_VERSIONS, "REF_VERSIONS_VERSION_ID", new TableField[] { RefVersions.REF_VERSIONS.VERSION_ID }, true);
        public static final ForeignKey<SynchronizerColumnsRecord, SynchronizersRecord> SYNCHRONIZER_COLUMNS_SYNCHRONIZER_ID = Internal.createForeignKey(Keys.CONSTRAINT_23, SynchronizerColumns.SYNCHRONIZER_COLUMNS, "SYNCHRONIZER_COLUMNS_SYNCHRONIZER_ID", new TableField[] { SynchronizerColumns.SYNCHRONIZER_COLUMNS.SYNCHRONIZER_ID }, true);
        public static final ForeignKey<SynchronizerColumnsRecord, ColumnMappingsRecord> SYNCHRONIZER_COLUMNS_COLUMN_MAPPING_ID = Internal.createForeignKey(Keys.CONSTRAINT_B, SynchronizerColumns.SYNCHRONIZER_COLUMNS, "SYNCHRONIZER_COLUMNS_COLUMN_MAPPING_ID", new TableField[] { SynchronizerColumns.SYNCHRONIZER_COLUMNS.COLUMN_MAPPING_ID }, true);
        public static final ForeignKey<SynchronizersRecord, RefsRecord> SYNCHRONIZERS_SOURCE_REF_ID = Internal.createForeignKey(Keys.CONSTRAINT_2, Synchronizers.SYNCHRONIZERS, "SYNCHRONIZERS_SOURCE_REF_ID", new TableField[] { Synchronizers.SYNCHRONIZERS.SOURCE_REF_ID }, true);
        public static final ForeignKey<SynchronizersRecord, RefsRecord> SYNCHRONIZERS_TARGET_REF_ID = Internal.createForeignKey(Keys.CONSTRAINT_2, Synchronizers.SYNCHRONIZERS, "SYNCHRONIZERS_TARGET_REF_ID", new TableField[] { Synchronizers.SYNCHRONIZERS.TARGET_REF_ID }, true);
        public static final ForeignKey<TableColumnsRecord, RefsRecord> TABLE_COLUMNS_REF_ID = Internal.createForeignKey(Keys.CONSTRAINT_2, TableColumns.TABLE_COLUMNS, "TABLE_COLUMNS_REF_ID", new TableField[] { TableColumns.TABLE_COLUMNS.REF_ID }, true);
    }
}
