/*
 * This file is generated by jOOQ.
 */
package com.apollo.qdb.quantumdbSchema;


import com.apollo.qdb.quantumdbSchema.tables.ActiveVersions;
import com.apollo.qdb.quantumdbSchema.tables.Changelog;
import com.apollo.qdb.quantumdbSchema.tables.Changesets;
import com.apollo.qdb.quantumdbSchema.tables.ColumnMappings;
import com.apollo.qdb.quantumdbSchema.tables.Config;
import com.apollo.qdb.quantumdbSchema.tables.RefVersions;
import com.apollo.qdb.quantumdbSchema.tables.Refs;
import com.apollo.qdb.quantumdbSchema.tables.SynchronizerColumns;
import com.apollo.qdb.quantumdbSchema.tables.Synchronizers;
import com.apollo.qdb.quantumdbSchema.tables.TableColumns;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Quantumdb extends SchemaImpl {

    private static final long serialVersionUID = 1069592291;

    /**
     * The reference instance of <code>QUANTUMDB</code>
     */
    public static final Quantumdb QUANTUMDB = new Quantumdb();

    /**
     * The table <code>QUANTUMDB.ACTIVE_VERSIONS</code>.
     */
    public final ActiveVersions ACTIVE_VERSIONS = ActiveVersions.ACTIVE_VERSIONS;

    /**
     * The table <code>QUANTUMDB.CHANGELOG</code>.
     */
    public final Changelog CHANGELOG = Changelog.CHANGELOG;

    /**
     * The table <code>QUANTUMDB.CHANGESETS</code>.
     */
    public final Changesets CHANGESETS = Changesets.CHANGESETS;

    /**
     * The table <code>QUANTUMDB.COLUMN_MAPPINGS</code>.
     */
    public final ColumnMappings COLUMN_MAPPINGS = ColumnMappings.COLUMN_MAPPINGS;

    /**
     * The table <code>QUANTUMDB.CONFIG</code>.
     */
    public final Config CONFIG = Config.CONFIG;

    /**
     * The table <code>QUANTUMDB.REF_VERSIONS</code>.
     */
    public final RefVersions REF_VERSIONS = RefVersions.REF_VERSIONS;

    /**
     * The table <code>QUANTUMDB.REFS</code>.
     */
    public final Refs REFS = Refs.REFS;

    /**
     * The table <code>QUANTUMDB.SYNCHRONIZER_COLUMNS</code>.
     */
    public final SynchronizerColumns SYNCHRONIZER_COLUMNS = SynchronizerColumns.SYNCHRONIZER_COLUMNS;

    /**
     * The table <code>QUANTUMDB.SYNCHRONIZERS</code>.
     */
    public final Synchronizers SYNCHRONIZERS = Synchronizers.SYNCHRONIZERS;

    /**
     * The table <code>QUANTUMDB.TABLE_COLUMNS</code>.
     */
    public final TableColumns TABLE_COLUMNS = TableColumns.TABLE_COLUMNS;

    /**
     * No further instances allowed
     */
    private Quantumdb() {
        super("QUANTUMDB", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        return Arrays.<Sequence<?>>asList(
            Sequences.COLUMN_MAPPINGS_ID,
            Sequences.SYNCHRONIZER_COLUMNS_ID,
            Sequences.SYNCHRONIZERS_ID,
            Sequences.TABLE_COLUMNS_ID);
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.<Table<?>>asList(
            ActiveVersions.ACTIVE_VERSIONS,
            Changelog.CHANGELOG,
            Changesets.CHANGESETS,
            ColumnMappings.COLUMN_MAPPINGS,
            Config.CONFIG,
            RefVersions.REF_VERSIONS,
            Refs.REFS,
            SynchronizerColumns.SYNCHRONIZER_COLUMNS,
            Synchronizers.SYNCHRONIZERS,
            TableColumns.TABLE_COLUMNS);
    }
}
