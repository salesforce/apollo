/*
 * This file is generated by jOOQ.
 */
package com.apollo.qdb.quantumdbSchema.tables.records;


import com.apollo.qdb.quantumdbSchema.tables.RefVersions;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RefVersionsRecord extends UpdatableRecordImpl<RefVersionsRecord> implements Record3<String, String, String> {

    private static final long serialVersionUID = 509470192;

    /**
     * Setter for <code>QUANTUMDB.REF_VERSIONS.REF_ID</code>.
     */
    public void setRefId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>QUANTUMDB.REF_VERSIONS.REF_ID</code>.
     */
    public String getRefId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>QUANTUMDB.REF_VERSIONS.VERSION_ID</code>.
     */
    public void setVersionId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>QUANTUMDB.REF_VERSIONS.VERSION_ID</code>.
     */
    public String getVersionId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>QUANTUMDB.REF_VERSIONS.TABLE_NAME</code>.
     */
    public void setTableName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>QUANTUMDB.REF_VERSIONS.TABLE_NAME</code>.
     */
    public String getTableName() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return RefVersions.REF_VERSIONS.REF_ID;
    }

    @Override
    public Field<String> field2() {
        return RefVersions.REF_VERSIONS.VERSION_ID;
    }

    @Override
    public Field<String> field3() {
        return RefVersions.REF_VERSIONS.TABLE_NAME;
    }

    @Override
    public String component1() {
        return getRefId();
    }

    @Override
    public String component2() {
        return getVersionId();
    }

    @Override
    public String component3() {
        return getTableName();
    }

    @Override
    public String value1() {
        return getRefId();
    }

    @Override
    public String value2() {
        return getVersionId();
    }

    @Override
    public String value3() {
        return getTableName();
    }

    @Override
    public RefVersionsRecord value1(String value) {
        setRefId(value);
        return this;
    }

    @Override
    public RefVersionsRecord value2(String value) {
        setVersionId(value);
        return this;
    }

    @Override
    public RefVersionsRecord value3(String value) {
        setTableName(value);
        return this;
    }

    @Override
    public RefVersionsRecord values(String value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RefVersionsRecord
     */
    public RefVersionsRecord() {
        super(RefVersions.REF_VERSIONS);
    }

    /**
     * Create a detached, initialised RefVersionsRecord
     */
    public RefVersionsRecord(String refId, String versionId, String tableName) {
        super(RefVersions.REF_VERSIONS);

        set(0, refId);
        set(1, versionId);
        set(2, tableName);
    }
}
