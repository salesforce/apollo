syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.salesfoce.apollo.stereotomy.event.proto";
option java_outer_classname = "StereotomyProto";
option objc_class_prefix = "Stereo";
import "google/protobuf/any.proto";

package stereotomy;

message Header {
    int64 sequenceNumber = 1;
    bytes identifier = 2;
    bytes priorEventDigest = 3;
    Version version = 4;
    string eventType = 5;
}

message EventCommon {
    string format = 1;
    bytes configuration = 2;
    EventCoordinates previous = 3;
    map<int32, bytes> authentication = 4;
}

message InteractionEvent {
    InteractionSpec specification = 1;
    EventCommon common = 2;
}

message InteractionSpec {
    Header header = 1;
    repeated Seal seals = 2;
}

message AttachmentEvent {
    Header header = 1;
    EventCommon common = 2;
    EventCoordinates coordinates = 3;
    map<int32, bytes> endorsements = 5; 
    repeated Receipt receipts = 6;
}

message Establishment {
    SigningThreshold signingThreshold = 1;
    repeated bytes keys = 2;
    bytes nextKeysDigest = 3;
    int32 witnessThreshold = 4;
}

message RotationEvent {
    RotationSpec specification = 1; 
    EventCommon common = 2;
    EventCoordinates delegatingEvent = 3;
}

message RotationSpec {
    Header header = 1;
    Establishment establishment = 2;
    repeated bytes witnessesRemoved = 3;
    repeated bytes witnessesAdded = 41;
    repeated Seal seals = 5;
}

message InceptionEvent {
    IdentifierSpec specification = 1;
    EventCommon common = 2;
    EventCoordinates delegatingEvent = 3;
    bytes identifier = 4;
}

message IdentifierSpec {
    Header header = 1;
    Establishment establishment = 2;
    repeated bytes witnesses = 3;
    repeated string configuration = 4;
}

message EventCoordinates {
    int64 sequenceNumber = 1;
    bytes identifier = 2;
    bytes digest = 3;
}

message Seal {
    oneof type {
        bytes digest = 1;
        EventCoordinates coordinates = 2;
    }
}

message Receipt {
    EventCoordinates coordinates = 1;
    map<int32, bytes> signatures = 2;
}

message Weight {
    int32 denominator = 1;
    int32 numerator = 2;
}

message Weights {
    repeated Weight weights = 1;
}

message SigningThreshold {
    int32 threshold = 1;
    repeated Weights weights = 2;
}

message Version {
    int32 major = 1;
    int32 minor = 2;
}


message StoredKeyState {
    bytes identifier = 1;
    bytes digest = 2;
    EventCoordinates coordinates = 3;
    EventCoordinates lastEvent = 4;
    EventCoordinates lastEstablishmentEvent = 5;
    bytes delegatingIdentifier = 6;
    repeated bytes keys = 7;
    bytes nextKeyConfigurationDigest = 8;
    repeated string configurationTraits = 9;
    SigningThreshold signingThreshold = 10;
    repeated bytes witnesses = 11;
    int32 witnessThreshold = 12;
}

message Signatures {
    map<int32, bytes> signatures = 1;
}